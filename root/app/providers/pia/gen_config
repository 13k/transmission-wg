#!/usr/bin/with-contenv bash
# vim: ft=sh
# shellcheck shell=bash

set -o pipefail

# shellcheck source=root/app/lib.sh
source "/app/lib.sh"

CREDENTIALS_FILE="${PROVIDERS_PREFIX:?}/pia/credentials.txt"

random_region() {
	piawgcli show-regions |
		tail -n+3 |
		sed -re 's/^.+  \s*(\w+)\s*$/\1/' |
		shuf -n 1
}

gen_wg_config() {
	local username="${1:?}"
	local password="${2:?}"
	local region="${3:?}"
	local output="${4:?}"

	piawgcli create-config \
		--pia-id="$username" \
		--pia-password="$password" \
		--pia-region-id="$region" >"$output" ||
		return $?

	chmod 600 "$output"
}

main() {
	local username="$PIA_USERNAME"
	local password="$PIA_PASSWORD"
	local region="$PIA_REGION"

	if [[ -n "$username" && -n "$password" ]]; then
		write_credentials "$username" "$password" "$CREDENTIALS_FILE" ||
			fatalw "Failed to write wireguard credentials. Fix the issues and restart the container"
	else
		if [[ -r "$CREDENTIALS_FILE" ]]; then
			local -A credentials

			read_credentials "$CREDENTIALS_FILE" credentials ||
				fatalf "Failed to read credentials from %s" "$CREDENTIALS_FILE"

			username="${credentials["username"]}"
			password="${credentials["password"]}"
		fi
	fi

	if [[ -z "$username" || -z "$password" ]]; then
		fatalw "PIA_USERNAME or PIA_PASSWORD is not set. Configure these environment variables and restart the container"
	fi

	if [[ -z "$region" || "$region" == "random" ]]; then
		infof "Selecting random region"

		region="$(random_region)" ||
			fatalf "Failed to select random region"
	fi

	if [[ -z "$region" ]]; then
		fatalw "Failed to select random region. Fix the issues and restart the container"
	fi

	infof "Selected region: %s" "${region@Q}"

	gen_wg_config "$username" "$password" "$region" "$WG_CONFIG" ||
		fatalw "Failed to generate wireguard config. Fix the issues and restart the container"
}

main
